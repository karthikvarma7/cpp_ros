;; Auto-generated. Do not edit!


(when (boundp 'boustrophedon_msgs::PlanMowingPathGoal)
  (if (not (find-package "BOUSTROPHEDON_MSGS"))
    (make-package "BOUSTROPHEDON_MSGS"))
  (shadow 'PlanMowingPathGoal (find-package "BOUSTROPHEDON_MSGS")))
(unless (find-package "BOUSTROPHEDON_MSGS::PLANMOWINGPATHGOAL")
  (make-package "BOUSTROPHEDON_MSGS::PLANMOWINGPATHGOAL"))

(in-package "ROS")
;;//! \htmlinclude PlanMowingPathGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass boustrophedon_msgs::PlanMowingPathGoal
  :super ros::object
  :slots (_property _robot_position ))

(defmethod boustrophedon_msgs::PlanMowingPathGoal
  (:init
   (&key
    ((:property __property) (instance geometry_msgs::PolygonStamped :init))
    ((:robot_position __robot_position) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _property __property)
   (setq _robot_position __robot_position)
   self)
  (:property
   (&rest __property)
   (if (keywordp (car __property))
       (send* _property __property)
     (progn
       (if __property (setq _property (car __property)))
       _property)))
  (:robot_position
   (&rest __robot_position)
   (if (keywordp (car __robot_position))
       (send* _robot_position __robot_position)
     (progn
       (if __robot_position (setq _robot_position (car __robot_position)))
       _robot_position)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PolygonStamped _property
    (send _property :serialization-length)
    ;; geometry_msgs/PoseStamped _robot_position
    (send _robot_position :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PolygonStamped _property
       (send _property :serialize s)
     ;; geometry_msgs/PoseStamped _robot_position
       (send _robot_position :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PolygonStamped _property
     (send _property :deserialize buf ptr-) (incf ptr- (send _property :serialization-length))
   ;; geometry_msgs/PoseStamped _robot_position
     (send _robot_position :deserialize buf ptr-) (incf ptr- (send _robot_position :serialization-length))
   ;;
   self)
  )

(setf (get boustrophedon_msgs::PlanMowingPathGoal :md5sum-) "60b9ea9efd7a7b3f7b33904f663aa7de")
(setf (get boustrophedon_msgs::PlanMowingPathGoal :datatype-) "boustrophedon_msgs/PlanMowingPathGoal")
(setf (get boustrophedon_msgs::PlanMowingPathGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PolygonStamped property
geometry_msgs/PoseStamped robot_position

================================================================================
MSG: geometry_msgs/PolygonStamped
# This represents a Polygon with reference coordinate frame and timestamp
Header header
Polygon polygon

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Polygon
#A specification of a polygon where the first and last points are assumed to be connected
Point32[] points

================================================================================
MSG: geometry_msgs/Point32
# This contains the position of a point in free space(with 32 bits of precision).
# It is recommeded to use Point wherever possible instead of Point32.  
# 
# This recommendation is to promote interoperability.  
#
# This message is designed to take up less space when sending
# lots of points at once, as in the case of a PointCloud.  

float32 x
float32 y
float32 z
================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :boustrophedon_msgs/PlanMowingPathGoal "60b9ea9efd7a7b3f7b33904f663aa7de")


